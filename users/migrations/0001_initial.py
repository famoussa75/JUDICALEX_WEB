# Generated by Django 5.2.5 on 2025-09-20 17:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('start', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('profession', models.CharField(blank=True, choices=[('AVOCAT', 'Avocat'), ('MAGISTRAT', 'Magistrat'), ('GREFFIER', 'Greffier'), ('HUISSIER', 'Huissier de justice'), ('NOTAIRE', 'Notaire'), ('JURISTE_ENT', "Juriste d'entreprise"), ('CONSEILLER_JUR', 'Conseiller juridique'), ('ETUDIANT_DRT', 'Étudiant en droit'), ('ENSEIGNANT_DRT', 'Enseignant-chercheur en droit'), ('SECRETAIRE_JUR', 'Secrétaire juridique'), ('ASSISTANT_JUR', 'Assistant juridique'), ('MEDIATEUR', 'Médiateur'), ('ARBITRE', 'Arbitre'), ('POLICE_GNDR', 'Police / Gendarmerie'), ('ADMIN_CIVIL', 'Administrateur civil'), ('INSP_TRAVAIL', 'Inspecteur du travail'), ('ETAT_CIVIL', "Officier de l'état civil"), ('FISCALISTE', 'Fiscaliste'), ('COMPTABLE', 'Comptable'), ('EXPERT_COMPT', 'Expert-comptable'), ('CONSULTANT', 'Consultant'), ('ENTREPRENEUR', 'Entrepreneur / Dirigeant'), ('JOURNALISTE', 'Journaliste (presse juridique)'), ('TRAD_ASSE', 'Traducteur assermenté'), ('LEGALTECH', 'Ingénieur / Informaticien (LegalTech)'), ('AUTRE', 'Autre')], max_length=32, null=True, verbose_name='Profession')),
                ('tel1', models.TextField(blank=True, null=True, verbose_name='Téléphone 1')),
                ('tel2', models.TextField(blank=True, null=True, verbose_name='Téléphone 2')),
                ('nationnalite', models.TextField(blank=True, null=True, verbose_name='Nationalité')),
                ('photo', models.FileField(blank=True, null=True, upload_to='users/photos/', verbose_name='Photo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('juridiction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='start.juridictions')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContributionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('sujet', models.CharField(max_length=200)),
                ('motivation', models.TextField()),
                ('piece_identite', models.FileField(upload_to='contribution_ids/', verbose_name="Pièce d'identité (PDF ou image)")),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvée'), ('rejected', 'Rejetée')], default='pending', max_length=20)),
                ('demandeur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandeur', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('info', 'Information'), ('success', 'Succès'), ('warning', 'Avertissement'), ('error', 'Erreur')], default='info', max_length=10)),
                ('message', models.TextField()),
                ('objet_cible', models.IntegerField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
